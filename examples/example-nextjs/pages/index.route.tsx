import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import i18n from "./index.i18n";
import {
  filterTranslations,
  loadTranslations,
  TranslationInTransport,
  useTranslations,
} from "@tsi18n/core";
import Link from "next/link";
import Cookies from "cookies";

export const getServerSideProps: GetServerSideProps = async ({
  locale,
  req,
  res,
}) => {
  const cookies = new Cookies(req, res);

  const isDataRequest = req.url?.startsWith("/_next/data");

  const translations = loadTranslations(i18n, locale as string);

  if (isDataRequest) {
    const cookieValue = cookies.get("tsi18n_cached");
    const cached = cookieValue ? JSON.parse(cookieValue) : [null, []];

    filterTranslations(translations, cached);

    cookies.set("tsi18n_cached", JSON.stringify(cached), {
      httpOnly: true,
      sameSite: "strict",
    });
  } else {
    cookies.set(
      "tsi18n_cached",
      JSON.stringify([locale, translations[1].map(([ns]) => ns)])
    );
  }

  return {
    props: {
      i18n: translations,
    },
  };
};

const Home: NextPage<{ i18n: TranslationInTransport }> = (props) => {
  const t = useTranslations<typeof i18n, "home">("home");

  return (
    <div className={styles.container}>
      <Head>
        <title>TSI18n Example NextJS</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          {t.hello} {t.world}
        </h1>
        <p>
          <Link href="/info">
            <a>Info</a>
          </Link>
        </p>
        <p>
          <Link locale="en" href="/">
            <a>en</a>
          </Link>
          <br />
          <Link locale="de" href="/">
            <a>de</a>
          </Link>
        </p>
      </main>
    </div>
  );
};

export default Home;
